version: '3.4'

services:
  lecturemanagement:
    image: ${DOCKER_REGISTRY-}lecturemanagement
    container_name: sms-lecturemanagement
    build:
      context: .
      dockerfile: LectureManagement/Dockerfile
    environment:
      - "ConnectionStrings:DefaultConnection=Server=sms-sqlserver-db;Database=Test_Driven_Development;User=sa;Password=YourStrong!Passw0rd"
      - usermanagement_url=https://usermanagement:5001
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - db

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sms-sqlserver-db
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: YourStrong!Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - ./data:/var/opt/mssql/data
      - ./log:/var/opt/mssql/log
      - ./secrets:/var/opt/mssql/secrets

  usermanagement:
    image: ${DOCKER_REGISTRY-}usermanagement
    container_name: sms-usermanagement
    build:
      context: .
      dockerfile: UserManagement/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - db

  organisationmanagement:
    image: ${DOCKER_REGISTRY-}organisationmanagement
    container_name: sms-organisationmanagement
    environment:
      - USERMANAGEMENT_URL=http://usermanagement:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=4000
      - ASPNETCORE_HTTPS_PORTS=4001
    build:
      context: .
      dockerfile: OrganisationManagement/Dockerfile
    ports:
      - "4000:4000"
      - "4001:4001"  
    depends_on:
      - db

  client:
    image: ${DOCKER_REGISTRY-}client
    container_name: sms-client
    environment:
        - USERMANAGEMENT_URL=http://usermanagement:5000
    build:
      context: .
      dockerfile: SchoolManagementClient/Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: sms-rabbitmq
    hostname: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
  
  redis:
    image: redis:latest
    container_name: sms-redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./.containers/redis/data:/data